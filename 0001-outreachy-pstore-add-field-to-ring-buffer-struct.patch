From 7413cc0d5fb091e4a4b054df2104852db0973849 Mon Sep 17 00:00:00 2001
Message-Id: <7413cc0d5fb091e4a4b054df2104852db0973849.1572681089.git.wambui.karugax@gmail.com>
In-Reply-To: <cover.1572681089.git.wambui.karugax@gmail.com>
References: <cover.1572681089.git.wambui.karugax@gmail.com>
From: Wambui Karuga <wambui.karugax@gmail.com>
Date: Sat, 2 Nov 2019 08:48:26 +0100
Subject: [Outreachy Pstore 1/1] outreachy/pstore: add field to ring buffer
 struct

Adds an integer field to the ring buffer struct along with a function
that reads and displays the integer when the trace file is read.

Signed-off-by: Wambui Karuga <wambui.karugax@gmail.com>
---
 include/linux/ring_buffer.h | 1 +
 kernel/trace/ring_buffer.c  | 8 ++++++++
 kernel/trace/trace.c        | 5 +++++
 3 files changed, 14 insertions(+)

diff --git a/include/linux/ring_buffer.h b/include/linux/ring_buffer.h
index 1a40277b512c..e13716f38961 100644
--- a/include/linux/ring_buffer.h
+++ b/include/linux/ring_buffer.h
@@ -180,6 +180,7 @@ unsigned long ring_buffer_dropped_events_cpu(struct ring_buffer *buffer, int cpu
 unsigned long ring_buffer_read_events_cpu(struct ring_buffer *buffer, int cpu);
 
 u64 ring_buffer_time_stamp(struct ring_buffer *buffer, int cpu);
+int ring_buffer_number(struct ring_buffer *buffer);
 void ring_buffer_normalize_time_stamp(struct ring_buffer *buffer,
 				      int cpu, u64 *ts);
 void ring_buffer_set_clock(struct ring_buffer *buffer,
diff --git a/kernel/trace/ring_buffer.c b/kernel/trace/ring_buffer.c
index 66358d66c933..4c6b7a12e71b 100644
--- a/kernel/trace/ring_buffer.c
+++ b/kernel/trace/ring_buffer.c
@@ -499,6 +499,7 @@ struct ring_buffer {
 
 	struct rb_irq_work		irq_work;
 	bool				time_stamp_abs;
+	int				read;
 };
 
 struct ring_buffer_iter {
@@ -759,6 +760,12 @@ u64 ring_buffer_time_stamp(struct ring_buffer *buffer, int cpu)
 }
 EXPORT_SYMBOL_GPL(ring_buffer_time_stamp);
 
+int ring_buffer_number(struct ring_buffer *buffer)
+{
+	return buffer->read;
+}
+EXPORT_SYMBOL_GPL(ring_buffer_number);
+
 void ring_buffer_normalize_time_stamp(struct ring_buffer *buffer,
 				      int cpu, u64 *ts)
 {
@@ -1395,6 +1402,7 @@ struct ring_buffer *__ring_buffer_alloc(unsigned long size, unsigned flags,
 	buffer->flags = flags;
 	buffer->clock = trace_clock_local;
 	buffer->reader_lock_key = key;
+	buffer->read = 5;
 
 	init_irq_work(&buffer->irq_work.work, rb_wake_up_waiters);
 	init_waitqueue_head(&buffer->irq_work.waiters);
diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c
index 6a0ee9178365..316967dec82f 100644
--- a/kernel/trace/trace.c
+++ b/kernel/trace/trace.c
@@ -3587,7 +3587,12 @@ static void print_event_info(struct trace_buffer *buf, struct seq_file *m)
 {
 	unsigned long total;
 	unsigned long entries;
+	int read;
 
+	read = ring_buffer_number(buf->buffer);
+
+	seq_printf(m, "# number read: %d\n", read);
+	seq_puts(m, "#\n");
 	get_total_entries(buf, &total, &entries);
 	seq_printf(m, "# entries-in-buffer/entries-written: %lu/%lu   #P:%d\n",
 		   entries, total, num_online_cpus());
-- 
2.23.0

